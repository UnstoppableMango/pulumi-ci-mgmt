diff --git a/native-provider-ci/src/steps.ts b/native-provider-ci/src/steps.ts
index b7114a324..33f22c4e6 100644
--- a/native-provider-ci/src/steps.ts
+++ b/native-provider-ci/src/steps.ts
@@ -28,7 +28,6 @@ export function CommandDispatchStep(providerName: string): Step {
   return {
     uses: action.slashCommand,
     with: {
-      token: "${{ secrets.PULUMI_BOT_TOKEN }}",
       "reaction-token": "${{ secrets.GITHUB_TOKEN }}",
       commands: "run-acceptance-tests",
       permission: "write",
@@ -38,19 +37,6 @@ export function CommandDispatchStep(providerName: string): Step {
   };
 }
 
-export function CommentPRWithSlashCommandStep(): Step {
-  return {
-    name: "Comment PR",
-    uses: action.prComment,
-    with: {
-      message:
-        "PR is now waiting for a maintainer to run the acceptance tests.\n" +
-        "**Note for the maintainer:** To run the acceptance tests, please comment */run-acceptance-tests* on the PR\n",
-      GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}",
-    },
-  };
-}
-
 export function CreateCommentsUrlStep(): Step {
   return {
     name: "Create URL to the run output",
@@ -134,7 +120,6 @@ export function UpdatePRWithResultsStep(): Step {
     name: "Update with Result",
     uses: action.createOrUpdateComment,
     with: {
-      token: "${{ secrets.PULUMI_BOT_TOKEN }}",
       repository:
         "${{ github.event.client_payload.github.payload.repository.full_name }}",
       "issue-number":
@@ -346,9 +331,6 @@ export function DispatchDocsBuildEvent(): Step {
   return {
     name: "Dispatch Event",
     run: "pulumictl create docs-build pulumi-${{ env.PROVIDER }} ${GITHUB_REF#refs/tags/}",
-    env: {
-      GITHUB_TOKEN: "${{ secrets.PULUMI_BOT_TOKEN }}",
-    },
   };
 }
 
@@ -533,19 +515,12 @@ export function PullRequestSdkGeneration(
   branch: string
 ): Step {
   let dir;
-  if (provider === "azure-native") {
-    dir = "azure-rest-api-specs";
-  }
-  if (provider === "aws-native") {
-    dir = "aws-cloudformation-user-guide";
-  }
   const result = {
     name: "Create PR",
     id: "create-pr",
     uses: action.pullRequest,
     with: {
       destination_branch: branch,
-      github_token: "${{ secrets.PULUMI_BOT_TOKEN }}",
       pr_body: "*Automated PR*",
       pr_title: `Automated SDK generation @ ${dir} \${{ steps.vars.outputs.commit-hash }}`,
       author_name: "pulumi-bot",
@@ -570,25 +545,6 @@ export function CheckSchemaChanges(provider: string): Step {
       "echo 'SCHEMA_CHANGES<<EOF' >> $GITHUB_ENV\n" +
       "schema-tools compare -p ${{ env.PROVIDER }} -o ${{ github.event.repository.default_branch }} -n --local-path=provider/cmd/pulumi-resource-${{ env.PROVIDER }}/schema.json >> $GITHUB_ENV\n" +
       "echo 'EOF' >> $GITHUB_ENV",
-    env: {
-      GITHUB_TOKEN: "${{ secrets.PULUMI_BOT_TOKEN }}",
-    },
-  };
-}
-
-export function LabelIfNoBreakingChanges(provider: string): Step {
-  if (provider === "command") {
-    return {};
-  }
-  return {
-    if: "contains(env.SCHEMA_CHANGES, 'Looking good! No breaking changes found.') && github.actor == 'pulumi-bot'",
-    name: "Add label if no breaking changes",
-    uses: action.addLabel,
-    with: {
-      labels: "impact/no-changelog-required",
-      number: "${{ github.event.issue.number }}",
-      github_token: "${{ secrets.GITHUB_TOKEN }}",
-    },
   };
 }
 
@@ -977,10 +933,6 @@ export function CreateUpdatePulumiPR(branch: string): Step {
         "update-pulumi/${{ github.run_id }}-${{ github.run_number }}",
       destination_branch: branch,
       pr_title: "Automated Pulumi/Pulumi upgrade",
-      github_token: "${{ secrets.PULUMI_BOT_TOKEN }}",
-    },
-    env: {
-      GITHUB_TOKEN: "${{ secrets.PULUMI_BOT_TOKEN }}",
     },
   };
 }
@@ -995,7 +947,6 @@ export function SetPRAutoMerge(provider?: string): Step {
     if: "steps.create-pr.outputs.has_changed_files",
     uses: action.autoMerge,
     with: {
-      token: "${{ secrets.PULUMI_BOT_TOKEN }}",
       "pull-request-number": "${{ steps.create-pr.outputs.pr_number }}",
       repository: "${{ github.repository }}",
       "merge-method": "squash",
@@ -1036,19 +987,6 @@ go/**
   };
 }
 
-export function NotifySlack(name: string): Step {
-  return {
-    if: "failure() && github.event_name == 'push'",
-    name: "Notify Slack",
-    uses: action.notifySlack,
-    with: {
-      author_name: `${name}`,
-      fields: "repo,commit,author,action",
-      status: "${{ job.status }}",
-    },
-  };
-}
-
 export function DownloadSpecificSDKStep(name: string): Step {
   return {
     name: `Download ${name} SDK`,
@@ -1130,21 +1068,6 @@ export function AzureLogin(provider: string): Step {
   return {};
 }
 
-export function AwsCredentialsForArmCoverageReport(): Step {
-  return {
-    name: "Configure AWS Credentials",
-    uses: action.configureAwsCredentials,
-    with: {
-      "aws-access-key-id": "${{ secrets.AWS_ACCESS_KEY_ID }}",
-      "aws-region": "us-west-2",
-      "aws-secret-access-key": "${{ secrets.AWS_SECRET_ACCESS_KEY }}",
-      "role-duration-seconds": 3600,
-      "role-session-name": "arm2pulumiCvg@githubActions",
-      "role-to-assume": "${{ secrets.AWS_CI_ROLE_ARN }}",
-    },
-  };
-}
-
 export function MakeClean(): Step {
   return {
     name: "Cleanup SDK Folder",
@@ -1159,13 +1082,6 @@ export function MakeLocalGenerate(): Step {
   };
 }
 
-export function GenerateCoverageReport(): Step {
-  return {
-    name: "Generate coverage report",
-    run: "make arm2pulumi_coverage_report",
-  };
-}
-
 export function TestResultsJSON(): Step {
   return {
     name: "Test usage of results.json",
@@ -1173,20 +1089,10 @@ export function TestResultsJSON(): Step {
   };
 }
 
-export function UploadArmCoverageToS3(): Step {
-  return {
-    name: "Upload results to S3",
-    run: "cd provider/pkg/arm2pulumi/internal/test && bash s3-upload-script.sh",
-  };
-}
-
 export function PrepareGitBranchForSdkGeneration(): Step {
   return {
     name: "Preparing Git Branch",
-    run:
-      'git config --local user.email "bot@pulumi.com"\n' +
-      'git config --local user.name "pulumi-bot"\n' +
-      "git checkout -b generate-sdk/${{ github.run_id }}-${{ github.run_number }}\n",
+    run: "git checkout -b generate-sdk/${{ github.run_id }}-${{ github.run_number }}\n",
   };
 }
 
@@ -1217,16 +1123,6 @@ export function MakeDiscovery(provider: string): Step {
   return {};
 }
 
-export function Codecov(): Step {
-  return {
-    name: "Upload coverage reports to Codecov",
-    uses: action.codecov,
-    env: {
-      CODECOV_TOKEN: "${{ secrets.CODECOV_TOKEN }}",
-    },
-  };
-}
-
 export function FreeDiskSpace(runner: string): Step {
   if (!runner.includes("ubuntu")) {
     // This step is only relevant for the Ubuntu runner.
